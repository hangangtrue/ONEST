data("sp142_bin")
devtools::document()
devtools::check()
devtools::check()
usethis::use_r("ONEST")
usethis::use_r("ONEST_main")
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
usethis::create_package("C:/Users/Guo/Desktop/ONEST")
sp142_bin=data("sp142_bin")
ONEST_main(sp142_bin)
devtools::load_all()
ONEST_main(sp142_bin)
sp142_bin
data("sp142_bin")
ONEST_main(sp142_bin)
devtools::check()
data("sp142_bin")
ONEST_main(sp142_bin)
devtools::load_all()
ONEST_main(sp142_bin)
devtools::load_all()
ONEST_main(sp142_bin)
devtools::check()
devtools::check()
devtools::check()
devtools::check()
?ONEST_main
?ONEST_main
devtools::check()
?ONEST_main
devtools::check()
?ONEST_main
?ONEST_main
devtools::document()
?ONEST_main
usethis::use_package_doc()
devtools::document()
?ONEST
?ONEST
?ONEST_main
?ONEST
devtools::document()
?ONEST
devtools::document()
?ONEST
data('sp263_bin')
devtools::check()
devtools::load_all()
data('sp263_bin')
ONEST_main(sp142_bin)
devtools::load_all()
usethis::create_package("C:/Users/Guo/Desktop/ONEST")
ONEST_main(sp142_bin)
usethis::use_vignette("ONEST")
library(mypkg)
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::load_all()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::check()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::load_all()
?ONEST
??ONEST
devtools::build_vignettes()
devtools::check()
usethis::use_GPL-3_license("Baihong Guo")
usethis::use_GPL_license("Baihong Guo")
usethis::use_GNU_license("Baihong Guo")
devtools::check()
usethis::use_readme_md()
devtools::build_readme()
usethis::use_readme_rmd()
devtools::build_readme()
data('sp263_bin')
devtools::load_all()
ONEST_main(sp142_bin)
devtools::build_readme()
devtools::build_readme()
data('sp142_bin')
devtools::load_all()
devtools::build_readme()
devtools::build_readme()
devtools::build_readme()
devtools::build_readme()
usethis::use_version()
usethis::use_cran-comments_md()
use_cran_comments(open = rlang::is_interactive())
usethis::use_cran-comments_md()
usethis::use_crancomments_md()
usethis::use_comments_md()
use_cran_comments(open = rlang::is_interactive())
usethis::use_cran_comments(open = rlang::is_interactive())
devtools::check()
devtools::check()
devtools::check()
devtools::build_vignettes()
devtools::build_readme()
devtools::build_vignettes()
devtools::build_readme()
devtools::check()
devtools::build_readme()
devtools::build_vignettes()
?ONEST_main
?ONEST_main
devtools::load_all()
?ONEST_main
?ONEST
devtools::load_all()
data('sp142_bin')
ONEST_main(sp142_bin)
data('sp142_bin')
ONEST_main(sp142_bin)
devtools::load_all()
browseVignettes("ONEST")
Vignettes("ONEST")
Vignette("ONEST")
vignette(ONEST)
vignette('ONEST')
browseVignettes("ONEST")
Vignette("ONEST")
vignette("ONEST")
Vignette("ONEST")
vignette("ONEST")
vignette(ONEST)
browseVignettes("RPEXE.RPEXT")
remove.packages("RPEXE.RPEXT", lib="~/R/win-library/3.6")
browseVignettes("RPEXE.RPEXT")
browseVignettes("RPEXE.RPEXT")
install.packages('RPEXE.RPEXT')
browseVignettes("RPEXE.RPEXT")
getwd()
build_manual(path=getwd())
library(devtools)
build_manual(path=getwd())
ReferenceManual(pkg = getwd(), outdir = getwd(), front.matter = "",
verbose = FALSE)
install.packages('Rd2markdown')
getwd()
build_manual(pkg=getwd())
install.packages('tinytex')
tinytex::install_tinytex()
build_manual(pkg=getwd())
library(devtools)
build_manual(pkg=getwd())
build_manual(pkg=getwd())
library(devtools)
build_manual(pkg=getwd())
Sys.getenv("PATH")
Sys.setenv(PATH=paste(Sys.getenv("PATH"),"C:/Program Files/MiKTeX 2.9/miktex/bin/x64/",sep=";"))
build_manual(pkg=getwd())
build_manual(pkg=getwd(),path=getwd())
library(tinytex)
remove.packages("tinytex", lib="~/R/win-library/3.6")
ReferenceManual(pkg = getwd(), outdir = getwd(), front.matter = "",
verbose = FALSE)
library(devtools)
Sys.getenv("PATH")
Sys.setenv(PATH=paste(Sys.getenv("PATH"),"C:/Program Files/MiKTeX 2.9/miktex/bin/x64/",sep=";"))
build_manual(pkg=getwd(),path=getwd())
build_manual(pkg=getwd(),path=getwd())
devtools::document()
build_manual(pkg=getwd(),path=getwd())
build_manual(pkg=getwd(),path=getwd())
library(devtools)
build_manual(pkg=getwd(),path=getwd())
library(devtools)
build_manual(pkg=getwd(),path=getwd())
build_manual(pkg=getwd(),path=getwd())
?ONEST
devtools::load_all()
?ONEST
?ggplot2
?graphics
devtools::document()
build_manual(pkg=getwd(),path=getwd())
library(devtools)
build_manual(pkg=getwd(),path=getwd())
?ONEST
devtools::load_all()
?ONEST
build_manual(pkg=getwd(),path=getwd())
?ONEST
devtools::document()
?ONEST
?ONEST-package
devtools::document()
?ONEST
devtools::document()
?ONEST
?graphics
devtools::document()
?ONEST
devtools::document()
?ONEST
devtools::document()
build_manual(pkg=getwd(),path=getwd())
devtools::document()
build_manual(pkg=getwd(),path=getwd())
devtools::document()
build_manual(pkg=getwd(),path=getwd())
devtools::document()
build_manual(pkg=getwd(),path=getwd())
devtools::document()
build_manual(pkg=getwd(),path=getwd())
library(mypkg)
devtools::document()
build_manual(pkg=getwd(),path=getwd())
devtools::load_all()
data('sp142_bin')
ONEST_main(sp142_bin)
devtools::load_all()
ONEST_main(sp142_bin)
devtools::load_all()
ReferenceManual(pkg = getwd(), outdir = getwd(), front.matter = "",
verbose = FALSE)
ONEST_main(sp142_bin)
?lines
devtools::load_all()
ONEST_main(sp142_bin)
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_readme()
devtools::build_vignettes()
devtools::build_readme()
devtools::check()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
sqrt(9)
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
data('sp142_bin')
View(sp142_bin)
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_readme()
build_manual(pkg=getwd(),path=getwd())
library(devtools)
build_manual(pkg=getwd(),path=getwd())
devtools::document()
build_manual(pkg=getwd(),path=getwd())
devtools::document()
build_manual(pkg=getwd(),path=getwd())
build_manual(pkg=getwd(),path=getwd())
devtools::document()
build_manual(pkg=getwd(),path=getwd())
build_manual(pkg=getwd(),path=getwd())
devtools::document()
build_manual(pkg=getwd(),path=getwd())
devtools::document()
build_manual(pkg=getwd(),path=getwd())
build_manual(pkg=getwd(),path=getwd())
devtools::document()
build_manual(pkg=getwd(),path=getwd())
build_manual(pkg=getwd(),path=getwd())
build_manual(pkg=getwd(),path=getwd())
library(devtools)
build_manual(pkg=getwd(),path=getwd())
devtools::document()
build_manual(pkg=getwd(),path=getwd())
devtools::check()
devtools::build_vignettes()
devtools::build_readme()
library(devtools)
devtools::document()
build_manual(pkg=getwd(),path=getwd())
devtools::document()
build_manual(pkg=getwd(),path=getwd())
devtools::document()
build_manual(pkg=getwd(),path=getwd())
devtools::document()
build_manual(pkg=getwd(),path=getwd())
devtools::document()
build_manual(pkg=getwd(),path=getwd())
devtools::document()
build_manual(pkg=getwd(),path=getwd())
devtools::document()
build_manual(pkg=getwd(),path=getwd())
library(devtools)
devtools::document()
ReferenceManual(pkg = getwd(), outdir = getwd(), front.matter = "",
verbose = FALSE)
build_manual(pkg=getwd(),path=getwd())
devtools::build_vignettes()
devtools::load_all()
ONEST_main(sp142_bin)
devtools::load_all()
data('sp142_bin')
ONEST_main(sp142_bin)
View(sp142_bin)
sp142_bin[5,11]
if (sp142_bin[5,11]==0) k=6
k=na.omit(sp142_bin)
View(k)
if (sp142_bin[5,11]==NaN) k=6
if (sp142_bin[5,11]=='NaN') k=6
if (sp142_bin[5,11]=='Na') k=6
if (sp142_bin[5,11]=='NA') k=6
if (sp142_bin[5,11]=='NA') k=7
if (sp142_bin[5,11]=='NA') k=7
if (sp142_bin[5,11]=='Na') k=7
if (sp142_bin[5,11]=='NaN') k=7
sp142_bin[5,11]=NA
View(sp142_bin)
if (sp142_bin[5,11]==NA) k=10
if (sp142_bin[5,11]=='NA') k=10
if (sp142_bin[5,11]==Na) k=10
if (sp142_bin[5,11]==NA) k=10
if (sp142_bin[5,11]==0) k=10
if (is.na(sp142_bin[5,11])==1) k=10
sum(is.na(sp142_bin)==1)
load("C:/Users/Guo/Desktop/ONEST/data/NCCN_sp142_t.rdata")
load("C:/Users/Guo/Desktop/ONEST/data/NCCN_sp142.rdata")
View(NCCN_sp142)
View(NCCN_sp142_t)
View(NCCN_sp142)
data('sp142_bin')
View(sp142_bin)
ONEST_main(sp142_bin)
devtools::load_all()
ONEST_main(sp142_bin)
devtools::load_all()
ONEST_main(sp142_bin)
View(sp142_bin)
sum(sp142_bin[5,])
sum(sp142_bin[5,])
sum(sp142_bin[5,4])
sum(sp142_bin[1,])
sum(sp142_bin[5,],na.rm=T)
sum(sp142_bin[5,]==1)
sum(sp142_bin[5,]==1, na.rm = T)
View(sp142_bin)
sum(sp142_bin[5,], na.rm = T)
sum(sp142_bin[5,])
sum(sp142_bin[5,]=='1')
sum(sp142_bin[5,]=='1', na.rm=T)
sum(sp142_bin[5,]==0)
sum(sp142_bin[5,]==0,na.rm=T)
sum(sp142_bin==0)
sum(sp142_bin==0, na.rm = TRUE)
devtools::load_all()
ONEST_main(sp142_bin)
sum(sp142_bin==0, na.rm = TRUE)
sum(sp142_bin==1, na.rm = TRUE)
devtools::load_all()
ONEST_main(sp142_bin)
data('sp263_bin')
ONEST_main(sp263_bin)
data('NCCN_sp142')
ONEST_main(NCCN_sp142)
data('NCCN_sp142_t')
ONEST_main(NCCN_sp142_t)
View(NCCN_sp142_t)
library(devtools)
devtools::document()
devtools::build_vignettes()
build_manual(pkg=getwd(),path=getwd())
devtools::build_vignettes()
devtools::build_readme()
devtools::document()
devtools::document()
library(devtools)
build_manual(pkg=getwd(),path=getwd())
devtools::check()
?ONEST
?ONEST_main
data('sp142_bin')
ONEST_main(sp142_bin)
View(sp142_bin)
data('sp263_bin')
View(sp263_bin)
data('NCCN_sp142')
View(NCCN_sp142)
data('NCCN_sp142_t')
library(devtools)
build_manual(pkg=getwd(),path=getwd())
devtools::load_all()
devtools::check()
devtools::check()
